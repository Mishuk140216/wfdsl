{
    "functions": [
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetWorkflows",
           "internal":"get_workflow_ids",
           "desc": "Gets the ids of all workflows.",
           "returns": "string[]",
           "example":"GetWorkflows()",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetWorkflowInfo",
           "internal":"get_workflow_info",
           "desc": "Gets the properties of a workflow.",
           "returns": "json",
           "example":"GetWorkflowInfo(workflow_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"RunWorkflow",
           "internal":"run_workflow",
           "desc": "Runs a workflow by id.",
           "returns": "string[]",
           "example":"RunWorkflow(workflow_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetLibraries",
           "internal":"get_library_ids",
           "desc": "Gets the ids of all libraries.",
           "returns": "string[]",
           "example":"GetLibraries()",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetLibraryInfo",
           "internal":"get_library_info",
           "desc": "Gets the properties of a library.",
           "returns": "string[]",
           "example":"GetLibraryInfo(library_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetHistories",
           "internal":"get_history_ids",
           "desc": "Gets the ids of all histories.",
           "returns": "string[]",
           "example":"GetHistories()",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetHistoryInfo",
           "internal":"get_history_info",
           "desc": "Gets the properties of a history.",
           "returns": "json",
           "example":"GetHistoryInfo(history_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetTools",
           "internal":"get_tool_ids",
           "desc": "Get ids of the available tools. Multiple ids will be returned for multiple tools of same name.",
           "returns": "string[]",
           "example":"GetTools()",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetToolInfo",
           "internal":"get_tool_info",
           "desc": "Gets the properties of a tool.",
           "returns": "json",
           "example":"GetToolInfo(workflow_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetToolNames",
           "internal":"get_tool_names",
           "desc": "Get names of the available tools.",
           "returns": "string[]",
           "example":"GetToolNames()",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"ToolIDToName",
           "internal":"tool_id_to_name",
           "desc": "Gets the name of a tool from id.",
           "returns": "string",
           "example":"ToolIDToName(tool_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"ToolNameToID",
           "internal":"tool_name_to_ids",
           "desc": "Gets the ids of a tool from name. It may return multiple ids if multiple tools with same name are installed. Use GetToolInfo to select the right one.",
           "returns": "string[]",
           "example":"ToolNameToID(tool_name)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"CreateHistory",
           "internal":"create_history",
           "desc": "Create a new history.",
           "returns": "string",
           "example":"CreateHistory('New History')",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"HistoryIDToName",
           "internal":"history_id_to_name",
           "desc": "Gets the name of a history from id.",
           "returns": "string",
           "example":"HistoryIDToName(history_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"HistoryNameToIDs",
           "internal":"history_name_to_ids",
           "desc": "Gets the ids of history name.",
           "returns": "string[]",
           "example":"HistoryNameToIDs(history_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetHistoryDatasets",
           "internal":"get_history_datasets",
           "desc": "Gets the ids of datasets in a history.",
           "returns": "string[]",
           "example":"GetHistoryDatasets([history_id], [dataset_name])",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetToolParams",
           "internal":"get_tool_params",
           "desc": "Get tool parameters.",
           "returns": "json",
           "example":"GetToolParams(['input'])",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"Upload",
           "internal":"upload",
           "desc": "Uploads a file to a history or a library. If no history or library is given, the most recent history is taken.",
           "returns": "string",
           "example":"dataset_id = Upload(ftp_or_http_or_path_to_file, [history_id/library_id])",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"Download",
           "internal":"download",
           "desc": "Download a dataset to file.",
           "returns": "string",
           "example":"filepath = Download(data_id)",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"RunTool",
           "internal":"run_tool",
           "desc": "Runs a tool on history.",
           "returns": "string",
           "example":"result = RunTool(history_id, tool_id, {params})",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"GetLastHistory",
           "internal":"get_most_recent_history",
           "desc": "Gets the id of the history which is last used.",
           "returns": "string",
           "example":"history_id = GetLastHistory()",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"DatasetIDToName",
           "internal":"dataset_id_to_name",
           "desc": "Gets the name of a dataset from id.",
           "returns": "string",
           "example":"dataset_name = DatasetIDToName(dataset_id, [hda_or_ldda])",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "name":"DatasetNameToIDs",
           "internal":"dataset_name_to_ids",
           "desc": "Gets the ids of a dataset from name. ",
           "returns": "string[]",
           "example":"dataset_ids = DatasetNameToIDs(dataset_name, [history_id])",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "group": "Quality",
           "level": 0,
           "name":"Groom",
           "internal":"run_fastq_groomer",
           "desc": "Runs the fastq groomer tool. If history_id not given, a new history is created.",
           "returns": "string",
           "example":"groomed_data = Groom([data], [hda = history_data_id], [ldda = library_data_id], [history_id = history_id])",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "group": "Alignment",
           "level": 0,
           "name":"BWAlign",
           "internal":"run_bwa",
           "desc": "Map with BWA. mapping low-divergent sequences against a large reference genome, such as the human genome and is designed for Illumina sequence reads up to 100bp.",
           "returns": "string",
           "example":"align_data = BWAlign(ref, data1, [data2], [history_id=history_id], [datatype='fastq/bam'])",
           "runmode": "dist"
       },
       {
           "org": "srlab",
           "package": "galaxy",
           "module": "app.biowl.libraries.galaxy.adapter",
           "group": "Texts",
           "level": 0,
           "name":"Cut",
           "internal":"run_cut",
           "desc": "Selects (cuts out) specified columns from the dataset. The output of this tool is always in tabular format (e.g., if your original delimiters are commas, they will be replaced with tabs).",
           "returns": "string",
           "example":"cut_data = Cut(data, [columns='c1,c2'], [delimeter='Tab/Whitespace/Comma/Dot/Dash/_/|'], [history_id=history_id])",
           "runmode": "dist"
       }
   ]
}